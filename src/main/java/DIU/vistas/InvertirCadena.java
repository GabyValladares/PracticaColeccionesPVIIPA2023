/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package DIU.vistas;

import java.util.ArrayList;
import java.util.Stack;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class InvertirCadena extends javax.swing.JInternalFrame {
 private ArrayList<Integer> invertir = new ArrayList<>();
 private DefaultTableModel modelo = new DefaultTableModel();
    /**
     * Creates new form InvertirCadena
     */
    public InvertirCadena() {
        initComponents();
        setModelo();
      
    }
    
     private void setModelo() {
        String[] cabeceras = {"Cadena invertida"};
        modelo.setColumnIdentifiers(cabeceras);
        tblresultado.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblcadena = new javax.swing.JLabel();
        txtcadena = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblresultado = new javax.swing.JTable();
        btnInvertir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("INVERTIR CADENA");

        lblcadena.setText("Ingresar cadena:");

        txtcadena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcadenaActionPerformed(evt);
            }
        });

        tblresultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblresultado);

        btnInvertir.setText("INVERTIR ");
        btnInvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvertirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(txtcadena, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(lblcadena, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(btnInvertir)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblcadena, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtcadena, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInvertir)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcadenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcadenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcadenaActionPerformed

    private void btnInvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvertirActionPerformed
               
        
        invertirCadena();
    }


private void invertirCadena() {
        String cadenaOriginal = txtcadena.getText();
        String cadenaInvertida = invertirCadenaConPila(cadenaOriginal);

        DefaultTableModel modelo = (DefaultTableModel) tblresultado.getModel();
        modelo.setRowCount(0); // Limpiar la tabla
        modelo.addRow(new Object[]{cadenaInvertida});
    }

    private String invertirCadenaConPila(String cadena) {
        if (cadena == null) {
            throw new IllegalArgumentException("La cadena no puede ser nula");
        }

        Stack<Character> pila = new Stack<>();

        // Agregar cada car√°cter de la cadena a la pila
        for (char c : cadena.toCharArray()) {
            pila.push(c);
        }

        // Construir la cadena invertida extrayendo caracteres de la pila
        StringBuilder resultado = new StringBuilder();
        while (!pila.isEmpty()) {
            resultado.append(pila.pop());
        }

        return resultado.toString();
    





    }//GEN-LAST:event_btnInvertirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInvertir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcadena;
    private javax.swing.JTable tblresultado;
    private javax.swing.JTextField txtcadena;
    // End of variables declaration//GEN-END:variables
}
