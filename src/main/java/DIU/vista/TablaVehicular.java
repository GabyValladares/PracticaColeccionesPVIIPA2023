/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package DIU.vista;

import DIU.modelo.PersonaFicha;
import DIU.modelo.Vehiculo;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class TablaVehicular extends javax.swing.JInternalFrame {

    /**
     * Creates new form TablaVehicular
     */
    public String nombre, cedula, placa, anio, marca, color, valor, multas, tipo;
    ArrayList<Vehiculo> listavehiculos = new ArrayList<>();
    DefaultTableModel modelo = new DefaultTableModel(); 
    public TablaVehicular() {
        initComponents();  
        setModelo();
    }
    public void setModelo() {
    String[] cabecera = {"Nro.","Placa","Marca","Tipo de Vehículo","Fecha de Fabricación",
        "Color","Valor","Multas", "Renovación de placa $", "Multa por contaminación $",
        "Valor matriculación por marca $", "Valor Si posee multas $", "Total a pagar $"};
    modelo.setColumnIdentifiers(cabecera);
    tblDatosVehiculo.setModel(modelo);
}
    public void llenarTabla() {
        
        Vehiculo vehiculo = new Vehiculo(placa, anio, marca, color, tipo, Double.parseDouble(valor), multas);
        PersonaFicha persona = new PersonaFicha(Integer.parseInt( cedula), nombre, listavehiculos);
        listavehiculos.add(vehiculo);
    }
    private void setDatos() {
    // ESTRUCTURA INFORMACIÓN TABLA
    Object[] filas = new Object[modelo.getColumnCount()];
    int contador = 1;
    double importeRenovacionPlacas = 0;
        if (!cedula.isEmpty() && !placa.isEmpty()) {
            if (cedula.charAt(0) == '1' && placa.charAt(0) == 'I') {
                importeRenovacionPlacas = sueldoBasico * 0.05;
            }
        }
    double importeMultaContaminacion = calcularMultaContaminacion(Integer.parseInt(anio));
    double importeMatriculacion = calcularMatriculacion();
    double importeMultas = calcularPoseMultas(multas);
    double totalPagar = importeRenovacionPlacas + importeMultaContaminacion + importeMatriculacion + importeMultas;

    for (Vehiculo puntero : listavehiculos) {
        filas[0] = contador;
        filas[1] = puntero.getPlaca();
        filas[2] = puntero.getMarca();
        filas[3] = puntero.getTipo();
        filas[4] = puntero.getAnio();
        filas[5] = puntero.getColor();
        filas[6] = puntero.getValor();
        filas[7] = puntero.getMultas();
        filas[8] = importeRenovacionPlacas;
        filas[9] = importeMultaContaminacion;
        filas[10] = importeMatriculacion;
        filas[11] = importeMultas;
        filas[12] = totalPagar;
        modelo.addRow(filas);

        contador++;
    }
    tblDatosVehiculo.setModel(modelo);
    lblNombre.setText(nombre);
    lblCedula.setText(cedula);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatosVehiculo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        lblMultas = new javax.swing.JLabel();
        lblTotalPagar = new javax.swing.JLabel();
        lblRenovacionPlaca = new javax.swing.JLabel();
        lblMultaContaminacion = new javax.swing.JLabel();
        lblMontoMatricula = new javax.swing.JLabel();
        lblSiMultas = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblRenovacion = new javax.swing.JLabel();
        lblContaminacion = new javax.swing.JLabel();
        lblMatricula = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("TABLA VEHÍCULO");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tblDatosVehiculo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDatosVehiculo);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Cédula:");

        lblRenovacionPlaca.setText("Importe renovación de placa: $");

        lblMultaContaminacion.setText("Importe monto de la multa por contaminación: $");

        lblMontoMatricula.setText("Importe monto de matriculación: $");

        lblSiMultas.setText("Importe por si posee multas: $");

        lblTotal.setText("Total a pagar: $");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblRenovacionPlaca)
                                .addGap(18, 18, 18)
                                .addComponent(lblRenovacion, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMultaContaminacion)
                                .addGap(18, 18, 18)
                                .addComponent(lblContaminacion, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMontoMatricula)
                                .addGap(18, 18, 18)
                                .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSiMultas)
                                .addGap(18, 18, 18)
                                .addComponent(lblMultas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTotal)
                                .addGap(18, 18, 18)
                                .addComponent(lblTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(423, 423, 423))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRenovacionPlaca)
                    .addComponent(lblRenovacion, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMultaContaminacion)
                    .addComponent(lblContaminacion, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMontoMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSiMultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMultas, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(lblTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    double sueldoBasico = 435;

    private double calcularMultaContaminacion(int anioFabricacion) {
        // Variable para almacenar los mensajes
        int anioVehiculo = Integer.parseInt(anio);
        if (anioFabricacion < 2010) {
            int añosContaminacion = 2024 - anioVehiculo;
            double porcentajeMulta = 0.02 * añosContaminacion;

            // Calcula el monto de la multa en efectivo (por ejemplo, basado en un sueldo)
            double montoMulta = sueldoBasico * porcentajeMulta;

            return montoMulta;
        } else {

            return 0;
        }
    }

    private double calcularMatriculacion() {
        double porcentajeMatriculacion = 0;

        if (marca.equalsIgnoreCase("Toyota")) {
            if (tipo.equalsIgnoreCase("Jeep")) {
                porcentajeMatriculacion = 0.08;
            } else if (tipo.equalsIgnoreCase("Camioneta")) {
                porcentajeMatriculacion = 0.12;
            }
        } else if (marca.equalsIgnoreCase("Suzuki")) {
            if (tipo.equalsIgnoreCase("Vitara")) {
                porcentajeMatriculacion = 0.10;
            } else if (tipo.equalsIgnoreCase("Automóvil")) {
                porcentajeMatriculacion = 0.09;
            }
        }

        // Calcula el monto de matriculación en efectivo
        double montoMatriculacion = Double.parseDouble(valor) * porcentajeMatriculacion;

        return montoMatriculacion;
    }

    private double calcularPoseMultas(String multas) {
        // Verificar si tiene multa
        if (multas.equalsIgnoreCase("Si")) {
            // Calcular el 20% del sueldo básico como porcentaje adicional
            double porcentajeAdicional = 0.25;
            return sueldoBasico * porcentajeAdicional;
        } else {
            // No hay multa, retorna 0
            return 0;
        }
    }
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        llenarTabla();
        setDatos();
        double importeRenovacionPlacas = 0;
        if (!cedula.isEmpty() && !placa.isEmpty()) {
            if (cedula.charAt(0) == '1' && placa.charAt(0) == 'I') {
                importeRenovacionPlacas = sueldoBasico * 0.05;
            }
        }
        // Llama al método calcularMultaContaminacion y obtiene el resultado
        double importeMultaContaminacion = calcularMultaContaminacion(Integer.parseInt(anio));
        double importeMatriculacion = calcularMatriculacion();
        double importeMultas = calcularPoseMultas(multas);

        // Calcula el total
        double totalPagar = importeRenovacionPlacas + importeMultaContaminacion + importeMatriculacion + importeMultas;
        
        lblRenovacion.setText(String.valueOf(importeRenovacionPlacas));
        lblContaminacion.setText(String.valueOf(importeMultaContaminacion));
        lblMatricula.setText(String.valueOf(importeMatriculacion));
        lblMultas.setText(String.valueOf(importeMultas));
        lblTotalPagar.setText(String.valueOf(totalPagar));
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblContaminacion;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblMontoMatricula;
    private javax.swing.JLabel lblMultaContaminacion;
    private javax.swing.JLabel lblMultas;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRenovacion;
    private javax.swing.JLabel lblRenovacionPlaca;
    private javax.swing.JLabel lblSiMultas;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPagar;
    private javax.swing.JTable tblDatosVehiculo;
    // End of variables declaration//GEN-END:variables
}
