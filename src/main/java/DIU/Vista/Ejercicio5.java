/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package DIU.Vista;

import java.util.Stack;
import javax.swing.JOptionPane;

/**
 *
 * @author jefe
 */
public class Ejercicio5 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Ejercicio5
     */
    public Ejercicio5() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblOracion = new javax.swing.JLabel();
        TxtOracion = new javax.swing.JTextField();
        bttnConfirmar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        lblTitulo.setText("Ejercicio5");

        lblOracion.setText("Ingresar oracion");

        bttnConfirmar.setText("Confirmar");
        bttnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(lblOracion)
                        .addGap(114, 114, 114)
                        .addComponent(TxtOracion, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(bttnConfirmar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(lblTitulo)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblTitulo)
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtOracion, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblOracion)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(bttnConfirmar)
                .addGap(99, 99, 99))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnConfirmarActionPerformed
        // TODO add your handling code here:
     String oracion = TxtOracion.getText();
        
        String oracionInvertida = invertirCadena(oracion);

    // Mostrar la oración invertida en un JOptionPane
    JOptionPane.showMessageDialog(null, "Oración invertida:\n" + oracionInvertida);
        
    }//GEN-LAST:event_bttnConfirmarActionPerformed

    private String invertirCadena(String input) {
    Stack<Character> pila = new Stack<>();

    // Poner cada caracter en la pila
    for (int i = 0; i < input.length(); i++) {
        pila.push(input.charAt(i));
    }

    // Construir la cadena invertida sacando los elementos de la pila
    StringBuilder invertedString = new StringBuilder();
    while (!pila.isEmpty()) {
        invertedString.append(pila.pop());
    }

    return invertedString.toString();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtOracion;
    private javax.swing.JButton bttnConfirmar;
    private javax.swing.JLabel lblOracion;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
