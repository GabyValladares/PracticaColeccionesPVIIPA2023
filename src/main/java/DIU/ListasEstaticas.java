/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package DIU;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class ListasEstaticas extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListasEstaticas
     */
    public ListasEstaticas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnguardar = new javax.swing.JButton();
        txtdimencion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtresultado = new javax.swing.JTextArea();
        lbldimencion = new javax.swing.JLabel();
        txtdimencion1 = new javax.swing.JTextField();
        lbldimencion1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("EJERCICIOS CON ARRAYS []");

        btnguardar.setText("GUARDAR");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        txtresultado.setColumns(20);
        txtresultado.setRows(5);
        jScrollPane1.setViewportView(txtresultado);

        lbldimencion.setText("listta 1");

        lbldimencion1.setText("listta 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbldimencion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtdimencion, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbldimencion1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtdimencion1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(btnguardar)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdimencion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbldimencion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdimencion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbldimencion1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnguardar)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
  // Obtener dimensiones desde campos de texto (asumo que son campos de texto)
        int dimencion = Integer.parseInt(txtdimencion.getText());
        int dimencion1 = Integer.parseInt(txtdimencion1.getText());

        // 1. Ingresar un listado de 10 números
        List<Integer> numeros = ingresarNumeros(dimencion, dimencion1);

        // 2. Encontrar el mayor y el menor
        int mayor = Collections.max(numeros);
        int menor = Collections.min(numeros);

        txtresultado.setText("Número Mayor: " + mayor);
        txtresultado.append("\nNúmero Menor: " + menor); // Cambiado a append

        // 3. Crear una segunda lista con los valores en una tabla
        List<List<Integer>> tabla = crearTabla(numeros);

        // Imprimir la lista en una tabla
        for (List<Integer> fila : tabla) {
            StringBuilder filaTexto = new StringBuilder();
            for (Integer valor : fila) {
                filaTexto.append(valor).append("\t");
            }
            txtresultado.append("\n" + filaTexto.toString()); // Cambiado a append
        }
    }

    private static List<Integer> ingresarNumeros(int dimencion, int dimencion1) {
        // Código para ingresar números según las dimensiones proporcionadas
        // Aquí un ejemplo simple:
        List<Integer> numeros = new ArrayList<>();
        for (int i = 0; i < dimencion * dimencion1; i++) {
            // Simplemente agregar el número a la lista (puedes usar un scanner para la entrada de usuario)
            numeros.add(i + 1);
        }
        return numeros;
    }

    private static List<List<Integer>> crearTabla(List<Integer> numeros) {
        // Código para crear la segunda lista con los valores en una tabla
        List<List<Integer>> tabla = new ArrayList<>();
        int filaActual = 0;
        for (int i = 0; i < numeros.size(); i++) {
            if (i % 5 == 0) {
                tabla.add(new ArrayList<>());
                filaActual++;
            }
            tabla.get(filaActual - 1).add(numeros.get(i));
        }
        return tabla;
    

    }//GEN-LAST:event_btnguardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnguardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldimencion;
    private javax.swing.JLabel lbldimencion1;
    private javax.swing.JTextField txtdimencion;
    private javax.swing.JTextField txtdimencion1;
    private javax.swing.JTextArea txtresultado;
    // End of variables declaration//GEN-END:variables
}
